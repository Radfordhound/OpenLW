// NOTE: Initial file was auto-generated by SymbolsDB.
#pragma once
#include "Camera/CameraController.h"

namespace csl
{
namespace math
{
struct Vector3;
} // math
} // csl

namespace app
{
struct ObjCamera3DSpawner;

namespace fnd
{
struct SUpdateInfo;
} // fnd

namespace Camera
{
class CBoostCameraPlugin;
struct SPlayer3DCameraParam;
struct EnterEventArgs;
class CCamera;
struct SPlayer3DCameraParamDashMode;

class CPlayer3DNormalCamera : public CCameraController
{
OPENLW_PRIVATE
    struct UpdatingInput
    {
        // TODO
    };

    char padding1[140];
    CBoostCameraPlugin* m_boostCameraPlugin;
    bool m_isBoosting;
    float field_0xF4;
    char padding2[120];

    LWAPI(0x02060300, 0x004332D0)
    CPlayer3DNormalCamera(bool param_1);

    LWAPI(0x0206041C, TODO)
    CPlayer3DNormalCamera(const SPlayer3DCameraParam& param_1, bool param_2);

    LWAPI(0x02060558, TODO)
    ~CPlayer3DNormalCamera();

    LWAPI(0x020605F8, TODO)
    void SetupFirstPosition();

    LWAPI(0x0206066C, 0x004333F0)
    void OnEnter(EnterEventArgs& param_1);

    LWAPI(0x02060A64, TODO)
    void CalcDistancePitchFovy(const UpdatingInput& param_1,
        const CCamera* param_2, const SPlayer3DCameraParam& param_3,
        float param_4);

    LWAPI(0x02060C28, TODO)
    void UpdateSlope(const UpdatingInput& param_1);

    LWAPI(0x02060F40, TODO)
    void GetCameraRightDir();

    LWAPI(0x0206101C, TODO)
    void UpdateTargetPosition(const UpdatingInput& param_1,
        const csl::math::Vector3& param_2, float param_3);

    LWAPI(0x02061480, TODO)
    void CheckCollision(const csl::math::Vector3& param_1,
        csl::math::Vector3& param_2, float param_3);

    LWAPI(0x020615E4, TODO)
    void Update(const app::fnd::SUpdateInfo& param_1);

    LWAPI(0x02062A10, TODO)
    void ResetCamera(csl::math::Vector3& param_1, csl::math::Vector3& param_2);

    LWAPI(0x02062BF8, TODO)
    void BeginBoostCamera();

    LWAPI(0x02062C10, TODO)
    void EndBoostCamera();

    LWAPI(0x02062C28, TODO)
    void BeginQuickStep();

    LWAPI(0x02062C40, TODO)
    void EndQuickStep();

    LWAPI(0x02062C4C, TODO)
    void Set3DCameraParam(const SPlayer3DCameraParam& param_1);

    LWAPI(0x02062C6C, TODO)
    void Set3DCameraParamDashMode(const SPlayer3DCameraParamDashMode& param_1);

    LWAPI(0x02062C88, TODO)
    void SetCameraReset(const csl::math::Vector3& param_1,
        const csl::math::Vector3& param_2);

    LWAPI(0x02062DCC, TODO)
    void Get3DCameraParam(const ObjCamera3DSpawner& param_1) const;

    LWAPI(0x02062E30, TODO)
    void SetProperty(const ObjCamera3DSpawner& param_1);

    LWAPI(0x02062E88, TODO)
    void CheckCollisionByRaycast(const csl::math::Vector3& param_1,
        csl::math::Vector3& param_2);
};
} // Camera
} // app
