// TODO: The name of this file is correct, but the path was guessed!
// NOTE: Initial file was auto-generated by SymbolsDB.
#pragma once
#include "System/Handle.h"

namespace csl
{
namespace math
{
struct Vector3;
} // math
} // csl

namespace app
{
namespace game
{
class ColliShape;
} // game

namespace Player
{
class CStateGOC;

namespace StateUtil
{
#ifdef LWAPI_EXPOSE_INTERNAL_LINKAGE
LWAPI(0x02a22670, TODO)
void CheckPassWall(CStateGOC& param_1, csl::math::Vector3& param_2, csl::math::Vector3& param_3, float param_4, float param_5, csl::math::Vector3* param_6);

LWAPI(0x02a229e4, TODO)
void CheckEdgePoint(CStateGOC& param_1, csl::math::Vector3& param_2, csl::math::Vector3& param_3, csl::math::Vector3& param_4, float param_5, float param_6, float param_7, bool param_8, unsigned char param_9, csl::math::Vector3* param_10);

LWAPI(0x02a23400, TODO)
void CheckWall(CStateGOC& param_1, csl::math::Vector3& param_2, csl::math::Vector3& param_3);

LWAPI(0x02a23578, TODO)
void CheckEdge(CStateGOC& param_1, csl::math::Vector3& param_2, csl::math::Vector3& param_3);
#endif

LWAPI(0x02a23698, TODO)
void CheckChangeParkourAvoidAction(CStateGOC& param_1, unsigned char* param_2, csl::math::Vector3* param_3, bool* param_4);

LWAPI(0x02a23ef8, TODO)
void CheckWallParkourAction(CStateGOC& param_1, csl::math::Vector3* param_2, csl::math::Vector3* param_3, bool* param_4, bool param_5);

LWAPI(0x02a2441c, TODO)
void CheckStopParkourAction(CStateGOC& param_1, csl::math::Vector3* param_2, csl::math::Vector3* param_3, bool* param_4);

LWAPI(0x02a2485c, TODO)
void CheckHitWallOnSideWall(CStateGOC& param_1, csl::math::Vector3& param_2, csl::math::Vector3* param_3);

LWAPI(0x02a249e4, TODO)
void GetClimbWallMaxHeight();

LWAPI(0x02a249f0, TODO)
void CheckChangeClimbWallFromWallRun(CStateGOC& param_1, csl::math::Vector3* param_2, csl::math::Vector3* param_3, csl::math::Vector3* param_4, csl::math::Vector3* param_5);

LWAPI(0x02a25054, TODO)
void CheckChangeWallRunFromKickWall(CStateGOC& param_1, csl::math::Vector3* param_2);

LWAPI(0x02a25140, TODO)
void CheckHangEdgeMove(CStateGOC& param_1, const csl::math::Vector3& param_2, const csl::math::Vector3& param_3, const csl::math::Vector3& param_4, const csl::math::Vector3& param_5, csl::math::Vector3* param_6, csl::math::Vector3* param_7, csl::math::Vector3* param_8, fnd::Handle<game::ColliShape>* param_9, int param_10);

LWAPI(0x02a256bc, TODO)
void CheckCloudCeiling(CStateGOC& param_1, csl::math::Vector3* param_2, csl::math::Vector3* param_3);

LWAPI(0x02a258ac, TODO)
void CheckCeiling(CStateGOC& param_1, csl::math::Vector3* param_2, csl::math::Vector3* param_3);

LWAPI(0x02a25a7c, TODO)
void CheckHangEdgeSub(CStateGOC& param_1, csl::math::Vector3& param_2, float param_3, float param_4, float param_5, csl::math::Vector3* param_6, csl::math::Vector3* param_7, csl::math::Vector3* param_8, csl::math::Vector3* param_9);

LWAPI(0x02a2622c, TODO)
void CheckHangEdge(CStateGOC& param_1, csl::math::Vector3* param_2, csl::math::Vector3* param_3, csl::math::Vector3* param_4, csl::math::Vector3* param_5);

LWAPI(0x02a2647c, TODO)
void CheckCancelHang(CStateGOC& param_1);

LWAPI(0x02a26578, TODO)
void CheckCancelHang(CStateGOC& param_1, csl::math::Vector3& param_2);

LWAPI(0x02a266a8, TODO)
void CheckCancelHang(CStateGOC& param_1, csl::math::Vector3& param_2, csl::math::Vector3& param_3);

LWAPI(0x02a267d0, TODO)
void SetRunAnimationRate(CStateGOC& param_1, float param_2);

LWAPI(0x02a26868, TODO)
void GetWallHeight(CStateGOC& param_1, csl::math::Vector3& param_2);

LWAPI(0x02a269c8, TODO)
void ChangeCancelStep(CStateGOC& param_1, const csl::math::Vector3& param_2);

LWAPI(0x02a26b4c, TODO)
void CheckKickWall(CStateGOC& param_1, csl::math::Vector3* param_2);

LWAPI(0x02a26cc0, TODO)
void CheckSideEdge(CStateGOC& param_1, float param_2, const csl::math::Vector3& param_3, const csl::math::Vector3& param_4, const csl::math::Vector3& param_5, csl::math::Vector3* param_6, csl::math::Vector3* param_7, csl::math::Vector3* param_8);

LWAPI(0x02a26fe8, TODO)
void CheckChangeGroundParkourAction(CStateGOC& param_1, bool param_2);

LWAPI(0x02a2736c, TODO)
void CheckChangeAirParkourAction(CStateGOC& param_1, bool param_2);

LWAPI(0x02a274d0, TODO)
void CheckChangeHangAction(CStateGOC& param_1);
} // StateUtil
} // Player
} // app
